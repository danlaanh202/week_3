{"version":3,"file":"todoRepository.js","names":["_firebaseAdmin","_interopRequireDefault","require","_db","_uuid","obj","__esModule","default","todoRef","db","collection","documentId","admin","firestore","FieldPath","getAllTodos","snapshot","orderBy","get","docs","map","doc","data","id","createTodo","generatedId","uuid","createdTodo","createdAt","Timestamp","now","updatedAt","set","removeTodo","delete","toggleTodo","updateDoc","ref","update","isCompleted","removeMultipleTodos","ids","length","Error","querySnapshot","where","deletes","documentSnapshot","push","Promise","all","completeMultipleTodos","updates"],"sources":["../../src/database/todoRepository.js"],"sourcesContent":["import admin from \"firebase-admin\";\r\nimport db from \"./db\";\r\nimport { v4 as uuid } from \"uuid\";\r\nconst todoRef = db.collection(\"todos\");\r\nconst documentId = admin.firestore.FieldPath.documentId();\r\nexport async function getAllTodos() {\r\n  const snapshot = await todoRef.orderBy(\"createdAt\", \"desc\").get();\r\n  return snapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id }));\r\n}\r\n\r\nexport async function createTodo(data) {\r\n  const generatedId = uuid();\r\n  const createdTodo = { ...data, createdAt: admin.firestore.Timestamp.now(), updatedAt:  admin.firestore.Timestamp.now() };\r\n  await todoRef.doc(generatedId).set(createdTodo);\r\n  return {...createdTodo, id: generatedId};\r\n}\r\n\r\nexport async function removeTodo(id) {\r\n  return await todoRef.doc(id).delete();\r\n}\r\n\r\nexport async function toggleTodo(id) {\r\n  const updateDoc = await todoRef.doc(id).get();\r\n  return await updateDoc.ref.update({\r\n    isCompleted: !updateDoc.data().isCompleted,\r\n    updatedAt: admin.firestore.Timestamp.now(),\r\n  });\r\n}\r\nexport async function removeMultipleTodos(ids) {\r\n  if (!ids?.length) {\r\n    throw new Error();\r\n  }\r\n\r\n  // ============ Batch writes usage ===========\r\n  /*\r\n  let batch = db.batch();\r\n  const querySnapshot = await todoRef.where(documentId, \"in\", ids).get();\r\n  for (const documentSnapshot of querySnapshot.docs) {\r\n    batch.delete(documentSnapshot.ref);\r\n  }\r\n  return batch.commit();\r\n  */\r\n  // ============ Promise.all usage ===========\r\n  const querySnapshot = await todoRef.where(documentId, \"in\", ids).get();\r\n  const deletes = [];\r\n  for (const documentSnapshot of querySnapshot.docs) {\r\n    deletes.push(documentSnapshot.ref.delete());\r\n  }\r\n  return await Promise.all(deletes);\r\n}\r\nexport async function completeMultipleTodos(ids) {\r\n  if (!ids?.length) {\r\n    throw new Error();\r\n  }\r\n  // ============ Batch writes usage ===========\r\n  /* let batch = db.batch();\r\n  const querySnapshot = await todoRef.where(documentId, \"in\", ids).get();\r\n  for (const documentSnapshot of querySnapshot.docs) {\r\n    batch.update(documentSnapshot.ref, {\r\n      isCompleted: !documentSnapshot.doc().isCompleted,\r\n    });\r\n  }\r\n  return batch.commit();\r\n  */\r\n\r\n  // ============ Promise.all usage ===========\r\n\r\n  const querySnapshot = await todoRef.where(documentId, \"in\", ids).get();\r\n  const updates = [];\r\n  for (const documentSnapshot of querySnapshot.docs) {\r\n    updates.push(\r\n      documentSnapshot.ref.update({\r\n        isCompleted: !documentSnapshot.data().isCompleted,\r\n        updatedAt: admin.firestore.Timestamp.now(),\r\n      })\r\n    );\r\n  }\r\n  return await Promise.all(updates);\r\n}\r\n"],"mappings":"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"}