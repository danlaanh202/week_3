{"version":3,"file":"todoRepository.js","names":["_firebaseAdmin","_interopRequireDefault","require","_db","_pickFields","obj","__esModule","default","todoRef","db","collection","documentId","admin","firestore","FieldPath","getOneTodo","id","fields","docRef","doc","get","todo","data","length","pickFields","getTodosWithParams","params","sort","limit","orderRef","orderBy","snapshot","docs","map","createTodo","createdTodo","createdAt","Timestamp","now","updatedAt","add","removeTodos","ids","Error","querySnapshot","where","deletes","documentSnapshot","push","ref","delete","Promise","all","updateTodos","updates","update","isCompleted"],"sources":["../../src/database/todoRepository.js"],"sourcesContent":["import admin from \"firebase-admin\";\r\nimport db from \"./db\";\r\nimport pickFields from \"../helpers/utils/pickFields\";\r\n\r\nconst todoRef = db.collection(\"todos\");\r\nconst documentId = admin.firestore.FieldPath.documentId();\r\n\r\nexport async function getOneTodo(id, fields) {\r\n  const docRef = await todoRef.doc(id).get();\r\n  const todo = { ...docRef.data(), id: docRef.id };\r\n\r\n  if (fields?.length > 0) {\r\n    return pickFields(todo, fields);\r\n  }\r\n  return todo;\r\n}\r\n\r\nexport async function getTodosWithParams(params) {\r\n  const { sort, limit } = params;\r\n\r\n  let orderRef = todoRef.orderBy(\"createdAt\", sort);\r\n  if (limit) {\r\n    orderRef = orderRef.limit(limit);\r\n  }\r\n  const snapshot = await orderRef.get();\r\n  return snapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id }));\r\n}\r\n\r\nexport async function createTodo(data) {\r\n  const createdTodo = {\r\n    ...data,\r\n    createdAt: admin.firestore.Timestamp.now(),\r\n    updatedAt: admin.firestore.Timestamp.now(),\r\n  };\r\n  const doc = await todoRef.add(createdTodo);\r\n  return { ...createdTodo, id: doc.id };\r\n}\r\n\r\nexport async function removeTodos(ids) {\r\n  if (!ids?.length) {\r\n    throw new Error();\r\n  }\r\n\r\n  // ============ Batch writes usage ===========\r\n  /*\r\n  let batch = db.batch();\r\n  const querySnapshot = await todoRef.where(documentId, \"in\", ids).get();\r\n  for (const documentSnapshot of querySnapshot.docs) {\r\n    batch.delete(documentSnapshot.ref);\r\n  }\r\n  return batch.commit();\r\n  */\r\n  // ============ Promise.all usage ===========\r\n  const querySnapshot = await todoRef.where(documentId, \"in\", ids).get();\r\n  const deletes = [];\r\n  for (const documentSnapshot of querySnapshot.docs) {\r\n    deletes.push(documentSnapshot.ref.delete());\r\n  }\r\n  return await Promise.all(deletes);\r\n}\r\nexport async function updateTodos(ids) {\r\n  if (!ids?.length) {\r\n    throw new Error();\r\n  }\r\n  // ============ Batch writes usage ===========\r\n  /* let batch = db.batch();\r\n  const querySnapshot = await todoRef.where(documentId, \"in\", ids).get();\r\n  for (const documentSnapshot of querySnapshot.docs) {\r\n    batch.update(documentSnapshot.ref, {\r\n      isCompleted: !documentSnapshot.doc().isCompleted,\r\n    });\r\n  }\r\n  return batch.commit();\r\n  */\r\n\r\n  // ============ Promise.all usage ===========\r\n\r\n  const querySnapshot = await todoRef.where(documentId, \"in\", ids).get();\r\n  const updates = [];\r\n  for (const documentSnapshot of querySnapshot.docs) {\r\n    updates.push(\r\n      documentSnapshot.ref.update({\r\n        isCompleted: !documentSnapshot.data().isCompleted,\r\n        updatedAt: admin.firestore.Timestamp.now(),\r\n      })\r\n    );\r\n  }\r\n  return await Promise.all(updates);\r\n}\r\n"],"mappings":"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"}