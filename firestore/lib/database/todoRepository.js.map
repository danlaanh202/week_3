{"version":3,"file":"todoRepository.js","names":["_firebaseAdmin","_interopRequireDefault","require","_db","_pickFields","_prepareDocs","obj","__esModule","default","todoRef","db","collection","getOneTodo","id","fields","docRef","doc","get","todo","prepareData","length","pickFields","getTodos","params","sort","limit","orderRef","orderBy","parseInt","snapshot","prepareDocs","createTodo","data","createdTodo","createdAt","admin","firestore","Timestamp","now","updatedAt","add","removeTodos","ids","deletes","map","delete","Promise","all","updateTodos","todos","updates","update","isCompleted"],"sources":["../../src/database/todoRepository.js"],"sourcesContent":["import admin from \"firebase-admin\";\r\nimport db from \"./db\";\r\nimport pickFields from \"../helpers/utils/pickFields\";\r\nimport { prepareData, prepareDocs } from \"../helpers/utils/prepareDocs\";\r\n\r\nconst todoRef = db.collection(\"todos\");\r\n\r\nexport async function getOneTodo(id, fields) {\r\n  const docRef = await todoRef.doc(id).get();\r\n\r\n  const todo = prepareData(docRef);\r\n\r\n  if (fields?.length > 0) {\r\n    return pickFields(todo, fields);\r\n  }\r\n  return todo;\r\n}\r\n\r\nexport async function getTodos(params) {\r\n  const { sort = \"desc\", limit } = params;\r\n\r\n  let orderRef = todoRef.orderBy(\"createdAt\", sort);\r\n\r\n  if (limit) {\r\n    orderRef = orderRef.limit(parseInt(limit));\r\n  }\r\n  const snapshot = await orderRef.get();\r\n\r\n  return prepareDocs(snapshot);\r\n}\r\n\r\nexport async function createTodo(data) {\r\n  const createdTodo = {\r\n    ...data,\r\n    createdAt: admin.firestore.Timestamp.now(),\r\n    updatedAt: admin.firestore.Timestamp.now(),\r\n  };\r\n  const doc = await todoRef.add(createdTodo);\r\n  return { ...createdTodo, id: doc.id };\r\n}\r\n\r\nexport async function removeTodos(ids) {\r\n  const deletes = ids.map((id) => todoRef.doc(id).delete());\r\n  return await Promise.all(deletes);\r\n}\r\n\r\nexport async function updateTodos(todos) {\r\n  const updates = todos.map((todo) =>\r\n    todoRef.doc(todo.id).update({\r\n      isCompleted: todo.isCompleted,\r\n      updatedAt: admin.firestore.Timestamp.now(),\r\n    })\r\n  );\r\n  return await Promise.all(updates);\r\n}\r\n"],"mappings":";;;;;;;;;;AAAA,IAAAA,cAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,GAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,WAAA,GAAAH,sBAAA,CAAAC,OAAA;AACA,IAAAG,YAAA,GAAAH,OAAA;AAAwE,SAAAD,uBAAAK,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAExE,MAAMG,OAAO,GAAGC,WAAE,CAACC,UAAU,CAAC,OAAO,CAAC;AAE/B,eAAeC,UAAUA,CAACC,EAAE,EAAEC,MAAM,EAAE;EAC3C,MAAMC,MAAM,GAAG,MAAMN,OAAO,CAACO,GAAG,CAACH,EAAE,CAAC,CAACI,GAAG,CAAC,CAAC;EAE1C,MAAMC,IAAI,GAAG,IAAAC,wBAAW,EAACJ,MAAM,CAAC;EAEhC,IAAID,MAAM,EAAEM,MAAM,GAAG,CAAC,EAAE;IACtB,OAAO,IAAAC,mBAAU,EAACH,IAAI,EAAEJ,MAAM,CAAC;EACjC;EACA,OAAOI,IAAI;AACb;AAEO,eAAeI,QAAQA,CAACC,MAAM,EAAE;EACrC,MAAM;IAAEC,IAAI,GAAG,MAAM;IAAEC;EAAM,CAAC,GAAGF,MAAM;EAEvC,IAAIG,QAAQ,GAAGjB,OAAO,CAACkB,OAAO,CAAC,WAAW,EAAEH,IAAI,CAAC;EAEjD,IAAIC,KAAK,EAAE;IACTC,QAAQ,GAAGA,QAAQ,CAACD,KAAK,CAACG,QAAQ,CAACH,KAAK,CAAC,CAAC;EAC5C;EACA,MAAMI,QAAQ,GAAG,MAAMH,QAAQ,CAACT,GAAG,CAAC,CAAC;EAErC,OAAO,IAAAa,wBAAW,EAACD,QAAQ,CAAC;AAC9B;AAEO,eAAeE,UAAUA,CAACC,IAAI,EAAE;EACrC,MAAMC,WAAW,GAAG;IAClB,GAAGD,IAAI;IACPE,SAAS,EAAEC,sBAAK,CAACC,SAAS,CAACC,SAAS,CAACC,GAAG,CAAC,CAAC;IAC1CC,SAAS,EAAEJ,sBAAK,CAACC,SAAS,CAACC,SAAS,CAACC,GAAG,CAAC;EAC3C,CAAC;EACD,MAAMtB,GAAG,GAAG,MAAMP,OAAO,CAAC+B,GAAG,CAACP,WAAW,CAAC;EAC1C,OAAO;IAAE,GAAGA,WAAW;IAAEpB,EAAE,EAAEG,GAAG,CAACH;EAAG,CAAC;AACvC;AAEO,eAAe4B,WAAWA,CAACC,GAAG,EAAE;EACrC,MAAMC,OAAO,GAAGD,GAAG,CAACE,GAAG,CAAE/B,EAAE,IAAKJ,OAAO,CAACO,GAAG,CAACH,EAAE,CAAC,CAACgC,MAAM,CAAC,CAAC,CAAC;EACzD,OAAO,MAAMC,OAAO,CAACC,GAAG,CAACJ,OAAO,CAAC;AACnC;AAEO,eAAeK,WAAWA,CAACC,KAAK,EAAE;EACvC,MAAMC,OAAO,GAAGD,KAAK,CAACL,GAAG,CAAE1B,IAAI,IAC7BT,OAAO,CAACO,GAAG,CAACE,IAAI,CAACL,EAAE,CAAC,CAACsC,MAAM,CAAC;IAC1BC,WAAW,EAAElC,IAAI,CAACkC,WAAW;IAC7Bb,SAAS,EAAEJ,sBAAK,CAACC,SAAS,CAACC,SAAS,CAACC,GAAG,CAAC;EAC3C,CAAC,CACH,CAAC;EACD,OAAO,MAAMQ,OAAO,CAACC,GAAG,CAACG,OAAO,CAAC;AACnC"}